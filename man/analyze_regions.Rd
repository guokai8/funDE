% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/analyze_regions.R
\name{analyze_regions}
\alias{analyze_regions}
\title{Differential Expression Analysis at Regional Level}
\usage{
analyze_regions(
  counts,
  metadata,
  design,
  contrast,
  annotation = NULL,
  method = "DESeq2",
  filter_low = TRUE,
  min_count = 10,
  alpha = 0.05,
  ...
)
}
\arguments{
\item{counts}{A matrix of counts at transcript level (transcripts x samples)}

\item{metadata}{A data.frame containing sample information}

\item{design}{A formula specifying the design matrix}

\item{contrast}{Character vector specifying the contrast}

\item{annotation}{Data.frame containing transcript annotations with columns:
transcript_id, gene_id, gene_name}

\item{method}{Method for DE: "DESeq2" (default) or "edgeR"}

\item{filter_low}{Logical, filter low-expressed transcripts (default: TRUE)}

\item{min_count}{Minimum count threshold (default: 10)}

\item{alpha}{Significance threshold (default: 0.05)}

\item{...}{Additional arguments passed to the DE method}
}
\value{
A list of class "functionalDE_result" containing:
  \item{results}{Data.frame with transcript-level DE statistics}
  \item{gene_summary}{Data.frame summarizing results per gene}
  \item{annotation}{Transcript annotation used}
  \item{method}{Method used}
}
\description{
Performs differential analysis on transcripts and isoforms using DESeq2
or edgeR at the transcript level. For more advanced exon-level and DTU
analysis, consider using specialized packages externally.
}
\details{
This simplified function performs differential expression at the transcript
level. For advanced analyses like:
- Exon-level differential usage: Use DEXSeq package directly
- Differential transcript usage (DTU): Use DRIMSeq or satuRn directly
- Splice junction analysis: Use leafcutter or other specialized tools

**Biological Interpretation:**
- Multiple transcripts from same gene with different patterns suggests isoform switching
- Compare transcript-level results with gene-level to identify DTU
- Use annotation to understand functional consequences (domains, UTRs, etc.)
}
\examples{
# Transcript-level analysis
transcript_results <- analyze_regions(
  counts = transcript_counts,
  metadata = sample_info,
  design = ~ condition,
  contrast = c("condition", "treated", "control"),
  annotation = transcript_annotation,
  method = "DESeq2"
)

# Identify potential isoform switches
# (genes with multiple significant transcripts with opposite directions)
gene_summary <- transcript_results$gene_summary
potential_switches <- gene_summary \%>\%
  filter(n_sig_transcripts >= 2, 
         has_opposite_direction == TRUE)

}
